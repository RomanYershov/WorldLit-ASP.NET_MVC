
@{
    ViewBag.Title = "Index";
}

<div class="container">
    <div class="well">
        <input type="button" class="btn btn-default" data-bind="value: btnProductVal, click: createProductForm" />
        <input type="text" data-bind="visible:isCreateProductClick, value: newProductName" placeholder="product name" />
        <div data-bind="foreach: products">
            <div>
                <h4><strong  data-bind="text: Name"></strong></h4>
                <a href="#" class="glyphicon glyphicon-floppy-disk" data-bind="click: $root.saveProduct"></a>
            </div>
            <div class="alert alert-success">
                <div class="form-horizontal" data-bind="foreach: Ingridients">
                    <div>
                        <input type="text" placeholder="название" data-bind="value:Name">
                        <input type="text" placeholder="вес (гр)" data-bind="value: Weight" />
                        <input type="text" placeholder="цена (ед)" data-bind="value: Cost" />
                        <a href="#" class="glyphicon glyphicon-minus" data-bind="click:$root.removeIngridient"></a>
                    </div>
                </div>
                <a href="#" class="glyphicon" data-bind="click:$root.addIngridient">+</a>
            </div><hr />
        </div>

    </div>
</div>


@section scripts{
    <script>
        function ProductModel(products) {
            var self = this;
            self.isCreateProductClick = ko.observable(false);
            self.btnProductVal = ko.observable("Создать продукт");
            self.newProductName = ko.observable("");
            self.ingr = [{ name: 'sugar', weight: 34 }, { name: 'tim', weight: 77 }];


            self.products = ko.observableArray([]);


            self.getProducts = function() {
                $.get('/product/GetProducts',
                    function(data) {
                        for (var i = 0; i < data.length; i++) {
                            self.products.push({
                                Id: data[i].Product.Id,
                                Name: data[i].Product.Name,
                                Cost: data[i].Product.Cost,
                                Weight: data[i].Product.Weight,
                                Description: data[i].Product.Description,
                                Ingridients: ko.observableArray(data[i].Ingridients)
                            });
                        }
                    });
            };
            self.getProducts();

            //self.products.push({ productName: 'new prod 2', ingridients: ko.observableArray([{name: 'badf', weight: 754}])});


            self.createProductForm = function() {
                self.isCreateProductClick(true);
                self.btnProductVal("Создать");
                if (self.isCreateProductClick() && self.newProductName().length > 0) {
                    createProduct();
                    self.isCreateProductClick(false);
                    self.newProductName("");
                    self.btnProductVal("Создать продукт");
                }
            }

            function createProduct() {
                var newName = self.newProductName();
                self.products.push({
                    Name: newName,
                    Cost: 0,
                    Weight: 0,
                    Description: '',
                    Ingridients: ko.observableArray([{ Name: '', Weight: '', Cost: '' }])
                });
            }

            self.addIngridient = function(product) {
                product.Ingridients.push({ Name: '', Weight: '', Cost: '' });
            }
            self.removeIngridient = function(ingridient) {
                $.each(self.products(), function() { this.Ingridients.remove(ingridient) }); // writen each js
            }

            self.saveProduct = function(product) {
                debugger;
                $.post('/product/saveProduct',
                    {
                        Name: product.Name,
                        Cost: product.Cost,
                        Description: product.Description,
                        Weight: product.Weight,
                        Id: product.Id,
                        Ingridients: product.Ingridients()
                    },
                    function(data) {
                        debugger;
                    });
                debugger;
            }

            self.save = function(product) {
                self.lastSavedJson(JSON.stringify(ko.toJS(product), null, 2));
            };

            self.lastSavedJson = ko.observable("");
        }


        ko.applyBindings(new ProductModel());


    </script>
}






